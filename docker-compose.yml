networks:
  spm-net:
    driver: bridge
    name: spm-net

volumes:
  pgadmin_data:
  # user_db_data:

services:
  # Kong
  kong:
    image: kong:latest
    container_name: spm-kong-gateway
    restart: always
    networks:
      - spm-net
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    volumes:
      - ./kong.yml:/etc/kong/kong.yml
    ports:
      - "8000:8000" # Kong proxy - where API requests go
      - "8001:8001" # Kong Admin API - for configuration
      - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic

  # PGAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: my-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5434:80"
    depends_on:
      - user_db
    networks:
      - spm-net

  # Frontend
  frontend:
    build: ./frontend
    image: spm/frontend:1.0
    container_name: spm-frontend
    restart: always
    ports:
      - "5173:5173"
    env_file:
      - .env
    networks:
      - spm-net
  
  # Documentation
  swagger:
    build: 
      context: ./documentation
      dockerfile: Dockerfile
    image: spm/swagger:1.0
    container_name: spm-swagger
    restart: always
    ports:
      - "6008:6008"
    volumes:
      - ./swagger:/usr/src/app/swagger
    networks:
      - spm-net

  # Backend
  user_service:
    build: ./backend/user_service
    image: spm/user_service:1.0
    container_name: spm_user_service
    restart: always
    networks:
      - spm-net
    # ports:
    #   - "6000:6000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - user_db
    
  user_db:
    image: postgres:15
    container_name: user_db
    restart: always
    networks:
      - spm-net
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: user_db
    ports:
      - "5433:5432"
    volumes:
      - ./backend/user_service/db:/docker-entrypoint-initdb.d